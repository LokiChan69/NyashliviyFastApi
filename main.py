from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
from typing import List, Optional
from datetime import datetime
import uuid

app = FastAPI(
    title="–ù—è—à-–§–æ—Ä—É–º API",
    description="API –¥–ª—è –º–∏–ª–æ–≥–æ —Ñ–æ—Ä—É–º–∞ —Å —Å–µ—Ä–¥–µ—á–∫–∞–º–∏",
    version="0.1.0",
    docs_url="/api/docs",
    redoc_url="/api/redoc",
    openapi_url="/api/openapi.json"
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ CORS –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)


# –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö
class Reply(BaseModel):
    id: str
    author: str
    content: str
    date: str
    hearts: int = 0


class Thread(BaseModel):
    id: str
    title: str
    author: str
    content: str
    date: str
    replies: List[Reply] = []
    hearts: int = 0


# "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö" –≤ –ø–∞–º—è—Ç–∏
db = {
    "threads": [
        {
            "id": "1",
            "title": "–ö–∞–∫–∏–µ –≤–∞—à–∏ —Å–∞–º—ã–µ –ª—é–±–∏–º—ã–µ –º–∏–ª—ã–µ –∞–Ω–∏–º–µ?",
            "author": "–°–∞–∫—É—Ä–∞",
            "content": "–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º! –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–∏—Ö —Å–∞–º—ã—Ö –ª—é–±–∏–º—ã—Ö –º–∏–ª—ã—Ö –∞–Ω–∏–º–µ, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–Ω–∏–º–∞—é—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ! üíñ –Ø –æ–±–æ–∂–∞—é '–ú–æ—è —Å–æ—Å–µ–¥–∫–∞ –¢–æ—Ç–æ—Ä–æ' –∏ '–ö-–û–ù!' üòä",
            "date": "2023-05-15",
            "hearts": 5,
            "replies": [
                {
                    "id": "1-1",
                    "author": "–ú–∏–∫—É",
                    "content": "–û–æ–æ, —è –æ–±–æ–∂–∞—é '–°–ª–∞–¥–∫–∞—è –∂–∏–∑–Ω—å' –∏ '–•–∏–Ω–∞–º–∞—Ç—Å—É!' üç° –û–Ω–∏ —Ç–∞–∫–∏–µ –º–∏–ª—ã–µ –∏ —É—é—Ç–Ω—ã–µ! ‚ú®",
                    "date": "2023-05-15",
                    "hearts": 2
                }
            ]
        }
    ]
}


# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
def get_current_date():
    return datetime.now().strftime("%Y-%m-%d")


def generate_id():
    return str(uuid.uuid4())


# –†–æ—É—Ç—ã API
@app.get("/api/threads", response_model=List[Thread], tags=["–¢—Ä–µ–¥—ã"])
def get_threads():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç—Ä–µ–¥–æ–≤"""
    return db["threads"]


@app.post("/api/threads", response_model=Thread, tags=["–¢—Ä–µ–¥—ã"])
def create_thread(thread: Thread):
    """–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç—Ä–µ–¥"""
    thread.id = generate_id()
    thread.date = get_current_date()
    thread.replies = []
    db["threads"].insert(0, thread.dict())
    return thread


@app.get("/api/threads/{thread_id}", response_model=Thread, tags=["–¢—Ä–µ–¥—ã"])
def get_thread(thread_id: str):
    """–ü–æ–ª—É—á–∏—Ç—å —Ç—Ä–µ–¥ –ø–æ ID"""
    for thread in db["threads"]:
        if thread["id"] == thread_id:
            return thread
    raise HTTPException(status_code=404, detail="–¢—Ä–µ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω")


@app.post("/api/threads/{thread_id}/replies", response_model=Reply, tags=["–û—Ç–≤–µ—Ç—ã"])
def create_reply(thread_id: str, reply: Reply):
    """–î–æ–±–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –≤ —Ç—Ä–µ–¥"""
    reply.id = generate_id()
    reply.date = get_current_date()

    for thread in db["threads"]:
        if thread["id"] == thread_id:
            thread["replies"].append(reply.dict())
            return reply

    raise HTTPException(status_code=404, detail="–¢—Ä–µ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω")


@app.post("/api/threads/{thread_id}/hearts", tags=["–†–µ–∞–∫—Ü–∏–∏"])
def add_heart_to_thread(thread_id: str):
    """–î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–¥–µ—á–∫–æ –∫ —Ç—Ä–µ–¥—É"""
    for thread in db["threads"]:
        if thread["id"] == thread_id:
            thread["hearts"] += 1
            return {"hearts": thread["hearts"]}

    raise HTTPException(status_code=404, detail="–¢—Ä–µ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω")


@app.post("/api/replies/{reply_id}/hearts", tags=["–†–µ–∞–∫—Ü–∏–∏"])
def add_heart_to_reply(reply_id: str):
    """–î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–¥–µ—á–∫–æ –∫ –æ—Ç–≤–µ—Ç—É"""
    for thread in db["threads"]:
        for reply in thread["replies"]:
            if reply["id"] == reply_id:
                reply["hearts"] += 1
                return {"hearts": reply["hearts"]}

    raise HTTPException(status_code=404, detail="–û—Ç–≤–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")


if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app)